name: Multi-Platform Build

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]

jobs:
  # Android Build
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build APK
      run: flutter build apk --release
      
    - name: Build App Bundle
      run: flutter build appbundle --release
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk
        
    - name: Upload App Bundle
      uses: actions/upload-artifact@v4
      with:
        name: android-bundle
        path: build/app/outputs/bundle/release/app-release.aab

  # Web Build
  build-web:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Web
      run: flutter build web --release
      
    - name: Upload Web Build
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web/

  # iOS Build
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Setup iOS
      run: |
        cd ios
        pod install
        cd ..
      
    - name: Build iOS Debug
      run: flutter build ios --debug --no-codesign
      
    - name: Build iOS Release
      run: flutter build ios --release --no-codesign
      
    - name: Upload iOS Debug
      uses: actions/upload-artifact@v4
      with:
        name: ios-debug
        path: build/ios/iphoneos/
        
    - name: Upload iOS Release
      uses: actions/upload-artifact@v4
      with:
        name: ios-release
        path: build/ios/iphoneos/

  # macOS Build
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build macOS
      run: flutter build macos --release
      
    - name: Upload macOS Build
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: build/macos/Build/Products/Release/

  # Windows Build
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Windows
      run: flutter build windows --release
      
    - name: Upload Windows Build
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: build/windows/runner/Release/

  # Linux Build
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Linux
      run: flutter build linux --release
      
    - name: Upload Linux Build
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: build/linux/x64/release/bundle/

  # Create Release (only on tags)
  create-release:
    needs: [build-android, build-web, build-ios, build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/android-apk/app-release.apk
          artifacts/android-bundle/app-release.aab
          artifacts/web-build/**/*
          artifacts/ios-release/**/*
          artifacts/macos-build/**/*
          artifacts/windows-build/**/*
          artifacts/linux-build/**/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 