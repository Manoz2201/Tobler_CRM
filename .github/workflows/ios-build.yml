name: iOS Build and Release

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.1'
        channel: 'stable'
        cache: true
        
    - name: Setup CocoaPods
      run: |
        echo "Installing/updating CocoaPods..."
        sudo gem install cocoapods
        pod --version
        
    - name: Show Flutter and Dart versions
      run: |
        flutter --version
        dart --version
        
    - name: Show available devices
      run: flutter devices
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Clean and regenerate iOS project
      run: |
        flutter clean
        flutter pub get
        cd ios
        rm -rf Pods Podfile.lock
        # Update deployment target in project.pbxproj
        sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 12.0;/IPHONEOS_DEPLOYMENT_TARGET = 13.0;/g' Runner.xcodeproj/project.pbxproj
        pod install --repo-update
        cd ..
        
    - name: Verify iOS project setup
      run: |
        echo "Checking iOS project structure..."
        ls -la ios/
        echo "Checking Podfile..."
        cat ios/Podfile
        echo "Checking deployment target in project.pbxproj..."
        grep "IPHONEOS_DEPLOYMENT_TARGET" ios/Runner.xcodeproj/project.pbxproj
        
    - name: Ensure we're building for iOS not web
      run: |
        echo "Current Flutter target platforms:"
        flutter devices
        echo "Available build targets:"
        flutter build --help | grep -E "(ios|web)" || echo "No specific platform info found"
        echo "Ensuring we're in iOS mode..."
        flutter config --no-enable-web
        flutter config --enable-ios
        
    - name: Build iOS (Debug)
      run: |
        echo "Building iOS Debug for device..."
        flutter build ios --debug --no-codesign --target-platform ios-arm64
        
    - name: Build iOS (Release)
      run: |
        echo "Building iOS Release for device..."
        flutter build ios --release --no-codesign --target-platform ios-arm64
        
    - name: Build iOS Simulator (Debug)
      run: |
        echo "Building iOS Debug for simulator..."
        flutter build ios --debug --simulator --no-codesign --target-platform ios-x86_64
        
    - name: Build iOS Simulator (Release)
      run: |
        echo "Building iOS Release for simulator..."
        flutter build ios --release --simulator --no-codesign --target-platform ios-x86_64
      
    - name: Verify iOS build output
      run: |
        echo "Checking iOS build output structure..."
        ls -la build/ios/
        echo "Checking device build output..."
        ls -la build/ios/iphoneos/ || echo "Device build not found"
        echo "Checking simulator build output..."
        ls -la build/ios/iphonesimulator/ || echo "Simulator build not found"
        
    - name: Upload iOS Debug Build (Device)
      uses: actions/upload-artifact@v4
      with:
        name: ios-debug-build-device
        path: build/ios/iphoneos/
        retention-days: 7
        
    - name: Upload iOS Release Build (Device)
      uses: actions/upload-artifact@v4
      with:
        name: ios-release-build-device
        path: build/ios/iphoneos/
        retention-days: 7
        
    - name: Upload iOS Debug Build (Simulator)
      uses: actions/upload-artifact@v4
      with:
        name: ios-debug-build-simulator
        path: build/ios/iphonesimulator/
        retention-days: 7
        
    - name: Upload iOS Release Build (Simulator)
      uses: actions/upload-artifact@v4
      with:
        name: ios-release-build-simulator
        path: build/ios/iphonesimulator/
        retention-days: 7
        
    - name: Create IPA (if signing is configured)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: |
        # This step requires proper iOS signing setup
        # You would need to add iOS signing certificates and provisioning profiles
        # as secrets to your repository
        echo "IPA creation requires iOS signing setup"
        # flutter build ipa --release
      
    - name: Upload IPA (if created)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: ios-ipa
        path: build/ios/ipa/
        retention-days: 30 