name: iOS Bundle Build and Release

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]

jobs:
  build-ios-bundle:
    # Using macOS 14 instead of macos-latest to avoid deprecation warnings
    # macos-latest will migrate to macOS 15 on August 4, 2025
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.1'
        channel: 'stable'
        cache: true
        
    - name: Setup CocoaPods
      run: |
        echo "Installing/updating CocoaPods..."
        sudo gem install cocoapods
        pod --version
        
    - name: Show Flutter and Dart versions
      run: |
        flutter --version
        dart --version
        
    - name: Show available devices
      run: flutter devices
      

        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Clean and regenerate iOS project
      run: |
        flutter clean
        flutter pub get
        cd ios
        rm -rf Pods Podfile.lock
        # Update deployment target in project.pbxproj
        sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 12.0;/IPHONEOS_DEPLOYMENT_TARGET = 13.0;/g' Runner.xcodeproj/project.pbxproj
        pod install --repo-update
        cd ..
        
    - name: Verify iOS project setup
      run: |
        echo "Checking iOS project structure..."
        ls -la ios/
        echo "Checking Podfile..."
        cat ios/Podfile
        echo "Checking deployment target in project.pbxproj..."
        grep "IPHONEOS_DEPLOYMENT_TARGET" ios/Runner.xcodeproj/project.pbxproj
        

        
    - name: Build iOS Bundle
      run: |
        echo "Building iOS bundle..."
        flutter build bundle --target-platform ios
        
    - name: Build macOS App using Xcode
      run: |
        echo "Building macOS app using Xcode..."
        cd ios
        # List available destinations to see what's available
        xcodebuild -workspace Runner.xcworkspace -scheme Runner -showdestinations -configuration Debug
        # Build for macOS which is always available in CI
        echo "Building for macOS (always available in CI)..."
        xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Debug -destination 'platform=macOS' -derivedDataPath build/derivedData clean build
        cd ..
      
    - name: Verify iOS build output
      run: |
        echo "Checking iOS build output structure..."
        ls -la build/
        echo "Checking bundle output..."
        ls -la build/flutter_assets/ || echo "Bundle not found"
        
    - name: Upload iOS Bundle
      uses: actions/upload-artifact@v4
      with:
        name: ios-bundle
        path: build/flutter_assets/
        retention-days: 7
        
    - name: Upload macOS Xcode Build
      uses: actions/upload-artifact@v4
      with:
        name: ios-macos-xcode-build
        path: ios/build/derivedData/
        retention-days: 7
        
    - name: Note about builds
      run: |
        echo "Build Summary:"
        echo "- iOS Bundle: Created for iOS deployment"
        echo "- macOS App: Built using Xcode for macOS platform"
        echo "For full iOS device builds, use local development environment with iOS simulators"
        
    - name: Create IPA (if signing is configured)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: |
        # This step requires proper iOS signing setup
        # You would need to add iOS signing certificates and provisioning profiles
        # as secrets to your repository
        echo "IPA creation requires iOS signing setup"
        # flutter build ipa --release
      
    - name: Upload IPA (if created)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: ios-ipa
        path: build/ios/ipa/
        retention-days: 30 
